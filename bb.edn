{:paths ["src"]
 :tasks
 {:requires ([bb-godot.tasks :as tasks])

  :init
  (do
    (def gut "godot --no-window --debug-collisions --path $PWD -d -s addons/gut/gut_cmdln.gd ")
    (def gut-with-window "godot --debug-collisions --path $PWD -d -s addons/gut/gut_cmdln.gd ")

    (def addons-map
      {:gut              :bitwes/Gut
       :MaxSizeContainer :MattUV/godot-MaxSizeContainer
       :inkgd            :ephread/inkgd}))

  test-with-window  (tasks/shell-and-log (str gut-with-window " -gexit"))
  test              (tasks/shell-and-log (str gut " -gexit"))
  test-match        (let [arg (some-> *command-line-args* first)]
                      (tasks/shell-and-log (str gut " -gexit -gunit_test_name=" arg)))
  test-match-script (let [arg (some-> *command-line-args* first)]
                      (tasks/shell-and-log (str gut " -gexit -gselect=" arg)))

  ;; TODO create a watch-all (take a list of dirs)
  watch          tasks/watch
  watch-reptile  (tasks/watch "addons/reptile/assets")
  watch-core     (tasks/watch "addons/core/assets")
  ;; TODO create a pixels-all (take a list of dirs)
  pixels         (let [dir (some-> *command-line-args* first)]
                   (if dir
                     (tasks/pixels dir)
                     (tasks/pixels)))
  pixels-reptile (tasks/pixels "addons/reptile/assets")
  pixels-core    (tasks/pixels "addons/core/assets")

  build-web  (tasks/build-web (some-> *command-line-args* first))
  ;; TODO rename/rework in the context of butler
  deploy-web (tasks/deploy-web "s3://danger.russmatney.com")
  zip        tasks/zip

  serve-built (let [arg (some-> *command-line-args* first)
                    arg (or arg "dino")]
                ;; http-server installable via bbin
                (tasks/shell-and-log (str "http-server --port 3010 --dir dist/" arg)))

  butler-push (let [arg          (some-> *command-line-args* first)
                    arg          (or arg "dino")
                    dir          (str "dist/" arg)
                    itch-project (str "russmatney/" arg ":html5")]
                ;; http-server installable via bbin
                (tasks/shell-and-log (str "butler push --if-changed " dir " " itch-project)))

  install-script-templates
  (apply tasks/install-script-templates
   #{"kagenash1/godot-behavior-tree/script_templates"}
   *command-line-args*)

  addons         (apply tasks/addons addons-map *command-line-args*)
  addons-install (apply tasks/install-addons addons-map *command-line-args*)
  addons-clone   (apply tasks/clone-addons addons-map *command-line-args*)}}
